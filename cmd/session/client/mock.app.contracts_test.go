// Code generated by MockGen. DO NOT EDIT.
// Source: ../../../api/session/v1/session_grpc.pb.go
//
// Generated by this command:
//
//	mockgen -source=../../../api/session/v1/session_grpc.pb.go -destination mock.app.contracts_test.go -package client_test
//
// Package client_test is a generated GoMock package.
package client_test

import (
	context "context"
	reflect "reflect"

	pb "github.com/ZergsLaw/back-template1/api/session/v1"
	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockSessionInternalAPIClient is a mock of SessionInternalAPIClient interface.
type MockSessionInternalAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockSessionInternalAPIClientMockRecorder
}

// MockSessionInternalAPIClientMockRecorder is the mock recorder for MockSessionInternalAPIClient.
type MockSessionInternalAPIClientMockRecorder struct {
	mock *MockSessionInternalAPIClient
}

// NewMockSessionInternalAPIClient creates a new mock instance.
func NewMockSessionInternalAPIClient(ctrl *gomock.Controller) *MockSessionInternalAPIClient {
	mock := &MockSessionInternalAPIClient{ctrl: ctrl}
	mock.recorder = &MockSessionInternalAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionInternalAPIClient) EXPECT() *MockSessionInternalAPIClientMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockSessionInternalAPIClient) Delete(ctx context.Context, in *pb.DeleteRequest, opts ...grpc.CallOption) (*pb.DeleteResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Delete", varargs...)
	ret0, _ := ret[0].(*pb.DeleteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockSessionInternalAPIClientMockRecorder) Delete(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSessionInternalAPIClient)(nil).Delete), varargs...)
}

// Get mocks base method.
func (m *MockSessionInternalAPIClient) Get(ctx context.Context, in *pb.GetRequest, opts ...grpc.CallOption) (*pb.GetResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Get", varargs...)
	ret0, _ := ret[0].(*pb.GetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSessionInternalAPIClientMockRecorder) Get(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSessionInternalAPIClient)(nil).Get), varargs...)
}

// Save mocks base method.
func (m *MockSessionInternalAPIClient) Save(ctx context.Context, in *pb.SaveRequest, opts ...grpc.CallOption) (*pb.SaveResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Save", varargs...)
	ret0, _ := ret[0].(*pb.SaveResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockSessionInternalAPIClientMockRecorder) Save(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockSessionInternalAPIClient)(nil).Save), varargs...)
}

// MockSessionInternalAPIServer is a mock of SessionInternalAPIServer interface.
type MockSessionInternalAPIServer struct {
	ctrl     *gomock.Controller
	recorder *MockSessionInternalAPIServerMockRecorder
}

// MockSessionInternalAPIServerMockRecorder is the mock recorder for MockSessionInternalAPIServer.
type MockSessionInternalAPIServerMockRecorder struct {
	mock *MockSessionInternalAPIServer
}

// NewMockSessionInternalAPIServer creates a new mock instance.
func NewMockSessionInternalAPIServer(ctrl *gomock.Controller) *MockSessionInternalAPIServer {
	mock := &MockSessionInternalAPIServer{ctrl: ctrl}
	mock.recorder = &MockSessionInternalAPIServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionInternalAPIServer) EXPECT() *MockSessionInternalAPIServerMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockSessionInternalAPIServer) Delete(arg0 context.Context, arg1 *pb.DeleteRequest) (*pb.DeleteResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(*pb.DeleteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockSessionInternalAPIServerMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSessionInternalAPIServer)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockSessionInternalAPIServer) Get(arg0 context.Context, arg1 *pb.GetRequest) (*pb.GetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*pb.GetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSessionInternalAPIServerMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSessionInternalAPIServer)(nil).Get), arg0, arg1)
}

// Save mocks base method.
func (m *MockSessionInternalAPIServer) Save(arg0 context.Context, arg1 *pb.SaveRequest) (*pb.SaveResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(*pb.SaveResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockSessionInternalAPIServerMockRecorder) Save(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockSessionInternalAPIServer)(nil).Save), arg0, arg1)
}

// MockUnsafeSessionInternalAPIServer is a mock of UnsafeSessionInternalAPIServer interface.
type MockUnsafeSessionInternalAPIServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeSessionInternalAPIServerMockRecorder
}

// MockUnsafeSessionInternalAPIServerMockRecorder is the mock recorder for MockUnsafeSessionInternalAPIServer.
type MockUnsafeSessionInternalAPIServerMockRecorder struct {
	mock *MockUnsafeSessionInternalAPIServer
}

// NewMockUnsafeSessionInternalAPIServer creates a new mock instance.
func NewMockUnsafeSessionInternalAPIServer(ctrl *gomock.Controller) *MockUnsafeSessionInternalAPIServer {
	mock := &MockUnsafeSessionInternalAPIServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeSessionInternalAPIServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeSessionInternalAPIServer) EXPECT() *MockUnsafeSessionInternalAPIServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedSessionInternalAPIServer mocks base method.
func (m *MockUnsafeSessionInternalAPIServer) mustEmbedUnimplementedSessionInternalAPIServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedSessionInternalAPIServer")
}

// mustEmbedUnimplementedSessionInternalAPIServer indicates an expected call of mustEmbedUnimplementedSessionInternalAPIServer.
func (mr *MockUnsafeSessionInternalAPIServerMockRecorder) mustEmbedUnimplementedSessionInternalAPIServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedSessionInternalAPIServer", reflect.TypeOf((*MockUnsafeSessionInternalAPIServer)(nil).mustEmbedUnimplementedSessionInternalAPIServer))
}
