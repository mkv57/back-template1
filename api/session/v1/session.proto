syntax = "proto3";

package api.session.v1;

import "api/annotations/v1/annotations.proto";
import "api/user_status/v1/user_status.proto";
import "buf/validate/validate.proto";
import "google/rpc/code.proto";

option go_package = "github.com/ZergsLaw/back-template1/api/session/v1;pb";

// Internal service API for managing user session.
service SessionInternalAPI {
  option (api.annotations.v1.service_rule) = {
    codes: [
      OK,
      CANCELLED,
      DEADLINE_EXCEEDED,
      INTERNAL
    ]
  };

  // Save new user's session and returns auth token.
  rpc Save(SaveRequest) returns (SaveResponse) {
    option (api.annotations.v1.method_rule) = {
      codes: [INVALID_ARGUMENT]
    };
  }

  // Returns user's session info by token.
  rpc Get(GetRequest) returns (GetResponse) {
    option (api.annotations.v1.method_rule) = {
      codes: [
        INVALID_ARGUMENT,
        NOT_FOUND
      ]
    };
  }

  // Delete user's session by auth token.
  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (api.annotations.v1.method_rule) = {
      codes: [
        INVALID_ARGUMENT,
        NOT_FOUND
      ]
    };
  }
}

message GetRequest {
  // Contains auth token, which was send by Save handler.
  string token = 1 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 999
  }];
}

message GetResponse {
  // Contains session's UUID.
  string session_id = 1 [(buf.validate.field).string = {uuid: true}];
  // Contains user's UUID.
  string user_id = 2 [(buf.validate.field).string = {uuid: true}];
  // Contains user`s status information.
  api.user_status.v1.StatusKind kind = 3 [(buf.validate.field).enum = {
    defined_only: true,
    not_in: [0]
  }];
}

message DeleteRequest {
  // Contains session's UUID.
  string session_id = 1 [(buf.validate.field).string = {uuid: true}];
}
message DeleteResponse {}

message SaveRequest {
  // Contains user UUID.
  string user_id = 1 [(buf.validate.field).string = {uuid: true}];
  // Contains user's origin IP.
  string ip = 2 [(buf.validate.field).string = {ipv4: true}];
  // Contains user's client.
  string user_agent = 3 [(buf.validate.field).string = {max_len: 999}];
  // Contains user`s session status.
  api.user_status.v1.StatusKind kind = 4 [(buf.validate.field).enum = {
    defined_only: true,
    not_in: [0]
  }];
}

message SaveResponse {
  // User's auth token.
  string token = 1 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 999
  }];
}
